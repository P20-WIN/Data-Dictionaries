total_pop,
male_below_poverty,
female_below_poverty,
male_above_poverty,
female_above_poverty
))
rural_urban <- read_csv("//opm-fs102/UserRedirections/WonderlyC/Downloads/DECENNIALSF12010.P2-Data.csv")
#Cleaning file and calculating share urban and rural
rural_urban <- rural_urban %>%
mutate(share_rural = `Total!!Rural`/Total) %>%
mutate(share_urban = `Total!!Urban`/Total) %>%
rename(Town = `Geographic Area Name`) %>%
filter(!grepl('County subdivisions not defined', Town)) %>%
mutate(Town = gsub(" town.*$","", Town)) %>%
select(-c(Geography, Total:`Total!!Not defined for this file`))
#Adding the urban and rural shares to the aging population file and calculting the estimates rural and urban by population for 60 and over and 65 and over
ct_aging_pop <- merge(ct_aging_pop,rural_urban,by="Town")
ct_aging_pop <- ct_aging_pop %>%
mutate(urban_estimate_60_over = share_urban * pop_60_over) %>%
mutate(rural_estimate_60_over = share_rural * pop_60_over) %>%
mutate(urban_estimate_65_over = share_urban * pop_65_over) %>%
mutate(rural_estimate_65_over = share_rural * pop_65_over)
write.csv(ct_aging_pop,
"//opm-fs102/UserRedirections/WonderlyC/Documents/Aging_Population_V2.csv",row.names = FALSE)
library(tidycensus)
library(tidyverse)
library(dplyr)
census_api_key("4fadc16aa62c2a30ecf7a24bbf4b379ae802c2c1") #include install = TRUE for first call
ct_aging_pop <- get_acs(
geography = "county subdivision", #County subdivisions are the equivalent to CT town boundaries.
variables = c(
#Total Population by Town - ACS Table B01001
total_pop = "B01001_001",
#Population 60 and over by Sex  - ACS Table B01001
male_pop_60_61 = "B01001_018",
male_pop_62_64 = "B01001_019",
male_pop_65_66 = "B01001_020",
male_pop_67_69 = "B01001_021",
male_pop_70_74 = "B01001_022",
male_pop_75_79 = "B01001_023",
male_pop_80_84 = "B01001_024",
male_pop_85_over = "B01001_025",
female_pop_60_61 = "B01001_042",
female_pop_62_64 = "B01001_043",
female_pop_65_66 = "B01001_044",
female_pop_67_69 = "B01001_045",
female_pop_70_74 = "B01001_046",
female_pop_75_79 = "B01001_047",
female_pop_80_84 = "B01001_048",
female_pop_85_over = "B01001_049",
#White Alone, Non-Hispanic by Age and Sex for Population 65 and over - ACS Table B01001H
male_white_65_74 = "B01001H_014",
male_white_75_84 = "B01001H_015",
male_white_85_over = "B01001H_016",
female_white_65_74 = "B01001H_029",
female_white_75_84 = "B01001H_030",
female_white_85_over = "B01001H_031",
#Population 65 and over with a disability - ACS Tables B18101
disability_65_74 = "B18101_016",
disability_75_over = "B18101_019",
#Population 65 and over below the poverty line - ACS Tables B17001
male_below_pov_65_74 = "B17001_015",
male_below_pov_75_over = "B17001_016",
female_below_pov_65_74 = "B17001_029",
female_below_pov_75_over = "B17001_030",
male_above_pov_65_74 = "B17001_044",
male_above_pov_75_over = "B17001_045",
female_above_pov_65_74 = "B17001_058",
female_above_pov_75_over = "B17001_059"
),
state = "CT",
year = 2020) %>%
#remove MOE and GEOID fields and reformat data from wide to long by town and variable
pivot_wider(id_cols = NAME,
names_from = variable,
values_from = estimate) %>%
#creating 60 and over and 65 and over estimates by sex
mutate(male_pop_60_over = select(.,male_pop_60_61:male_pop_85_over) %>%
rowSums(na.rm = TRUE)) %>%
mutate(female_pop_60_over = select(.,female_pop_60_61:female_pop_85_over) %>%
rowSums(na.rm = TRUE)) %>%
mutate(male_pop_65_over = select(.,male_pop_65_66:male_pop_85_over) %>%
rowSums(na.rm = TRUE)) %>%
mutate(female_pop_65_over = select(.,female_pop_65_66:female_pop_85_over) %>%
rowSums(na.rm = TRUE)) %>%
#Creating total population estimates for 60 and over and 65 and over
mutate(pop_60_over = male_pop_60_over + female_pop_60_over) %>%
mutate(pop_65_over = male_pop_65_over + female_pop_65_over) %>%
#Creating total population estimates for 60 and over and 65 and over by race/ethnicity
mutate(white_65_over = select(.,male_white_65_74:female_white_85_over) %>%
rowSums(na.rm = TRUE)) %>%
mutate(non_white_65_over = pop_65_over-white_65_over ) %>%
#Creating estimate for population 65 and over with a disability
mutate(disability_65_over = disability_65_74 + disability_75_over) %>%
#Creating estimate for population 65 and over and below poverty line
mutate(male_below_poverty = select(.,male_below_pov_65_74:male_below_pov_75_over) %>%
rowSums(na.rm = TRUE)) %>%
mutate(female_below_poverty = female_below_pov_65_74 + female_below_pov_75_over) %>%
mutate(below_poverty = male_below_poverty + female_below_poverty) %>%
mutate(male_above_poverty = select(.,male_above_pov_65_74:male_above_pov_75_over) %>%
rowSums(na.rm = TRUE)) %>%
mutate(female_above_poverty = female_above_pov_65_74 + female_above_pov_75_over) %>%
mutate(above_poverty = male_above_poverty + female_above_poverty) %>%
#removing the empty "subdivisions not defined" rows
filter(!grepl('County subdivisions not defined', NAME))%>%
#Dropping everything after town name
#(ex. "Bethel town, Fairfield County, Connecticut" is now just "Bethel")
mutate(NAME = gsub(" town.*$","", NAME)) %>%
rename(Town = NAME) %>%
#Dropping all of the calculation variables
select(-c(male_pop_60_61,
male_pop_62_64,
male_pop_65_66,
male_pop_67_69,
male_pop_70_74,
male_pop_75_79,
male_pop_80_84,
male_pop_85_over,
female_pop_60_61,
female_pop_62_64,
female_pop_65_66,
female_pop_67_69,
female_pop_70_74,
female_pop_75_79,
female_pop_80_84,
female_pop_85_over,
male_white_65_74,
male_white_75_84,
male_white_85_over,
female_white_65_74,
female_white_75_84,
female_white_85_over,
disability_65_74,
disability_75_over,
male_below_pov_65_74,
male_below_pov_75_over,
female_below_pov_65_74,
female_below_pov_75_over,
male_above_pov_65_74,
male_above_pov_75_over,
female_above_pov_65_74,
female_above_pov_75_over,
male_pop_60_over,
female_pop_60_over,
male_pop_65_over,
female_pop_65_over,
white_65_over,
total_pop,
male_below_poverty,
female_below_poverty,
male_above_poverty,
female_above_poverty
))
rural_urban <- read_csv("//opm-fs102/UserRedirections/WonderlyC/Downloads/DECENNIALSF12010.P2-Data.csv")
#Cleaning file and calculating share urban and rural
rural_urban <- rural_urban %>%
mutate(share_rural = `Total!!Rural`/Total) %>%
mutate(share_urban = `Total!!Urban`/Total) %>%
rename(Town = `Geographic Area Name`) %>%
filter(!grepl('County subdivisions not defined', Town)) %>%
mutate(Town = gsub(" town.*$","", Town)) %>%
select(-c(Geography, Total:`Total!!Not defined for this file`))
#Adding the urban and rural shares to the aging population file and calculting the estimates rural and urban by population for 60 and over and 65 and over
ct_aging_pop <- merge(ct_aging_pop,rural_urban,by="Town")
ct_aging_pop <- ct_aging_pop %>%
mutate(urban_estimate_60_over = share_urban * pop_60_over) %>%
mutate(rural_estimate_60_over = share_rural * pop_60_over) %>%
mutate(urban_estimate_65_over = share_urban * pop_65_over) %>%
mutate(rural_estimate_65_over = share_rural * pop_65_over)
rural_urban <- read_csv("//opm-fs102/UserRedirections/WonderlyC/Downloads/DECENNIALSF12010.P2-Data.csv")
rural_urban <- read_csv("//opm-fs102/UserRedirections/WonderlyC/Downloads/DECENNIALSF12010.P2-Data.csv")
#Cleaning file and calculating share urban and rural
rural_urban <- rural_urban %>%
mutate(share_rural = `Total!!Rural`/Total) %>%
mutate(share_urban = `Total!!Urban`/Total) %>%
rename(Town = `Geographic Area Name`) %>%
filter(!grepl('County subdivisions not defined', Town)) %>%
mutate(Town = gsub(" town.*$","", Town)) %>%
select(-c(Geography, Total:`Total!!Not defined for this file`))
ct_aging_pop <- merge(ct_aging_pop,rural_urban,by="Town")
ct_aging_pop <- ct_aging_pop %>%
mutate(urban_estimate_60_over = share_urban * pop_60_over) %>%
mutate(rural_estimate_60_over = share_rural * pop_60_over) %>%
mutate(urban_estimate_65_over = share_urban * pop_65_over) %>%
mutate(rural_estimate_65_over = share_rural * pop_65_over)
ct_aging_pop <- get_acs(
geography = "county subdivision", #County subdivisions are the equivalent to CT town boundaries.
variables = c(
#Total Population by Town - ACS Table B01001
total_pop = "B01001_001",
#Population 60 and over by Sex  - ACS Table B01001
male_pop_60_61 = "B01001_018",
male_pop_62_64 = "B01001_019",
male_pop_65_66 = "B01001_020",
male_pop_67_69 = "B01001_021",
male_pop_70_74 = "B01001_022",
male_pop_75_79 = "B01001_023",
male_pop_80_84 = "B01001_024",
male_pop_85_over = "B01001_025",
female_pop_60_61 = "B01001_042",
female_pop_62_64 = "B01001_043",
female_pop_65_66 = "B01001_044",
female_pop_67_69 = "B01001_045",
female_pop_70_74 = "B01001_046",
female_pop_75_79 = "B01001_047",
female_pop_80_84 = "B01001_048",
female_pop_85_over = "B01001_049",
#White Alone, Non-Hispanic by Age and Sex for Population 65 and over - ACS Table B01001H
male_white_65_74 = "B01001H_014",
male_white_75_84 = "B01001H_015",
male_white_85_over = "B01001H_016",
female_white_65_74 = "B01001H_029",
female_white_75_84 = "B01001H_030",
female_white_85_over = "B01001H_031",
#Population 65 and over with a disability - ACS Tables B18101
disability_65_74 = "B18101_016",
disability_75_over = "B18101_019",
#Population 65 and over below the poverty line - ACS Tables B17001
male_below_pov_65_74 = "B17001_015",
male_below_pov_75_over = "B17001_016",
female_below_pov_65_74 = "B17001_029",
female_below_pov_75_over = "B17001_030",
male_above_pov_65_74 = "B17001_044",
male_above_pov_75_over = "B17001_045",
female_above_pov_65_74 = "B17001_058",
female_above_pov_75_over = "B17001_059"
),
state = "CT",
year = 2020) %>%
#remove MOE and GEOID fields and reformat data from wide to long by town and variable
pivot_wider(id_cols = NAME,
names_from = variable,
values_from = estimate) %>%
#creating 60 and over and 65 and over estimates by sex
mutate(male_pop_60_over = select(.,male_pop_60_61:male_pop_85_over) %>%
rowSums(na.rm = TRUE)) %>%
mutate(female_pop_60_over = select(.,female_pop_60_61:female_pop_85_over) %>%
rowSums(na.rm = TRUE)) %>%
mutate(male_pop_65_over = select(.,male_pop_65_66:male_pop_85_over) %>%
rowSums(na.rm = TRUE)) %>%
mutate(female_pop_65_over = select(.,female_pop_65_66:female_pop_85_over) %>%
rowSums(na.rm = TRUE)) %>%
#Creating total population estimates for 60 and over and 65 and over
mutate(pop_60_over = male_pop_60_over + female_pop_60_over) %>%
mutate(pop_65_over = male_pop_65_over + female_pop_65_over) %>%
#Creating total population estimates for 60 and over and 65 and over by race/ethnicity
mutate(white_65_over = select(.,male_white_65_74:female_white_85_over) %>%
rowSums(na.rm = TRUE)) %>%
mutate(non_white_65_over = pop_65_over-white_65_over ) %>%
#Creating estimate for population 65 and over with a disability
mutate(disability_65_over = disability_65_74 + disability_75_over) %>%
#Creating estimate for population 65 and over and below poverty line
mutate(male_below_poverty = select(.,male_below_pov_65_74:male_below_pov_75_over) %>%
rowSums(na.rm = TRUE)) %>%
mutate(female_below_poverty = female_below_pov_65_74 + female_below_pov_75_over) %>%
mutate(below_poverty = male_below_poverty + female_below_poverty) %>%
mutate(male_above_poverty = select(.,male_above_pov_65_74:male_above_pov_75_over) %>%
rowSums(na.rm = TRUE)) %>%
mutate(female_above_poverty = female_above_pov_65_74 + female_above_pov_75_over) %>%
mutate(above_poverty = male_above_poverty + female_above_poverty) %>%
#removing the empty "subdivisions not defined" rows
filter(!grepl('County subdivisions not defined', NAME))%>%
#Dropping everything after town name
#(ex. "Bethel town, Fairfield County, Connecticut" is now just "Bethel")
mutate(NAME = gsub(" town.*$","", NAME)) %>%
rename(Town = NAME) %>%
#Dropping all of the calculation variables
select(-c(male_pop_60_61,
male_pop_62_64,
male_pop_65_66,
male_pop_67_69,
male_pop_70_74,
male_pop_75_79,
male_pop_80_84,
male_pop_85_over,
female_pop_60_61,
female_pop_62_64,
female_pop_65_66,
female_pop_67_69,
female_pop_70_74,
female_pop_75_79,
female_pop_80_84,
female_pop_85_over,
male_white_65_74,
male_white_75_84,
male_white_85_over,
female_white_65_74,
female_white_75_84,
female_white_85_over,
disability_65_74,
disability_75_over,
male_below_pov_65_74,
male_below_pov_75_over,
female_below_pov_65_74,
female_below_pov_75_over,
male_above_pov_65_74,
male_above_pov_75_over,
female_above_pov_65_74,
female_above_pov_75_over,
male_pop_60_over,
female_pop_60_over,
male_pop_65_over,
female_pop_65_over,
white_65_over,
total_pop,
male_below_poverty,
female_below_poverty,
male_above_poverty,
female_above_poverty
))
rural_urban <- read_csv("//opm-fs102/UserRedirections/WonderlyC/Downloads/DECENNIALSF12010.P2-Data.csv")
rural_urban <- rural_urban %>%
mutate(share_rural = `Total!!Rural`/Total) %>%
mutate(share_urban = `Total!!Urban`/Total) %>%
rename(Town = `Geographic Area Name`) %>%
filter(!grepl('County subdivisions not defined', Town)) %>%
mutate(Town = gsub(" town.*$","", Town)) %>%
select(-c(Geography, Total:`Total!!Not defined for this file`))
ct_aging_pop <- merge(ct_aging_pop,rural_urban,by="Town")
ct_aging_pop <- ct_aging_pop %>%
mutate(urban_estimate_60_over = share_urban * pop_60_over) %>%
mutate(rural_estimate_60_over = share_rural * pop_60_over) %>%
mutate(urban_estimate_65_over = share_urban * pop_65_over) %>%
mutate(rural_estimate_65_over = share_rural * pop_65_over)
write.csv(ct_aging_pop,
"//opm-fs102/UserRedirections/WonderlyC/Documents/Aging_Population_V2.csv",row.names = FALSE)
write.csv(ct_aging_pop,
"//opm-fs102/UserRedirections/WonderlyC/Documents/Aging_Population_V2.csv",row.names = FALSE)
library(xlsx)
#### Reading in the Data Dictionaries - add row for new agencies ####
CCIC <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
install.packages("xlsx")
library(xlsx)
library(xlsx)
CCIC <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
CCIC <- read.excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
CCIC <- readxl("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
install.packages("tidyverse")
library(tidyverse)
CCIC <- readxl("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
install.packages("readxl")
library(readxl)
library(readxl)
CCIC <- readxl("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
CSCU <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CSCU/CSCU_Data_Dictionary.xlsx")
CCIC <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
CSCU <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CSCU/CSCU_Data_Dictionary.xlsx")
DCF <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/DCF/DCF_Data_Dictionary.xlsx")
DHMAS <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/DMHAS/DMHAS_Data_Dictionary.xlsx")
DOL <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/DOL/DOL_Data_Dictionary.xlsx")
OEC <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/OEC/OEC_Data_Dictionary.xlsx")
OHE <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/OHE/OHE_Data_Dictionary.xlsx")
SDE <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/SDE/SDE_Data_Dictionary.xlsx")
UConn <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/UConn/UConn_Data_Dictionary.xlsx")
CCEH <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CCEH/CCEH_Data_Dictionary.xlsx")
P20WIN_Data_Dictionary <- rbind(CCIC,CSCU,DCF,DHMAS,DOL,OEC,OHE,SDE,UConn,CCEH)
P20WIN_Data_Dictionary$`Click to View More` <- '&oplus;' #adding the column that will be used to expand the selection.
P20WIN_Data_Dictionary <- P20WIN_Data_Dictionary[,c(8,1:7)] #moving the added column to be the first column
P20WIN_Data_Dictionary[is.na(P20WIN_Data_Dictionary)] <- "Not Available"
#### Saving P20 WIN Data Dictionary ####
write.xlsx(as.data.frame(P20WIN_Data_Dictionary),"~/Data-Dictionaries/P20 WIN Data Dictionary/P20WIN_Data_Dictionary.xlsx", row.names = FALSE)
library(xlsx)
P20WIN_Data_Dictionary <- rbind(CCIC,CSCU,DCF,DHMAS,DOL,OEC,OHE,SDE,UConn,CCEH)
P20WIN_Data_Dictionary$`Click to View More` <- '&oplus;' #adding the column that will be used to expand the selection.
P20WIN_Data_Dictionary <- P20WIN_Data_Dictionary[,c(8,1:7)] #moving the added column to be the first column
P20WIN_Data_Dictionary[is.na(P20WIN_Data_Dictionary)] <- "Not Available"
#### Saving P20 WIN Data Dictionary ####
write.xlsx(as.data.frame(P20WIN_Data_Dictionary),"~/Data-Dictionaries/P20 WIN Data Dictionary/P20WIN_Data_Dictionary.xlsx", row.names = FALSE)
rsconnect::deployApp('~/Data-Dictionaries/P20 WIN Data Dictionary')
CCEH <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CCEH/CCEH_Data_Dictionary.xlsx")
CCIC <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
CSCU <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CSCU/CSCU_Data_Dictionary.xlsx")
DCF <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/DCF/DCF_Data_Dictionary.xlsx")
DHMAS <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/DMHAS/DMHAS_Data_Dictionary.xlsx")
DOL <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/DOL/DOL_Data_Dictionary.xlsx")
OEC <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/OEC/OEC_Data_Dictionary.xlsx")
OHE <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/OHE/OHE_Data_Dictionary.xlsx")
SDE <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/SDE/SDE_Data_Dictionary.xlsx")
UConn <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/UConn/UConn_Data_Dictionary.xlsx")
#### Creating P20 WIN Data Dictionary ####
P20WIN_Data_Dictionary <- rbind(CCEH,CCIC,CSCU,DCF,DHMAS,DOL,OEC,OHE,SDE,UConn)
P20WIN_Data_Dictionary$`Click to View More` <- '&oplus;' #adding the column that will be used to expand the selection.
P20WIN_Data_Dictionary <- P20WIN_Data_Dictionary[,c(8,1:7)] #moving the added column to be the first column
P20WIN_Data_Dictionary[is.na(P20WIN_Data_Dictionary)] <- "Not Available"
#### Saving P20 WIN Data Dictionary ####
write.xlsx(as.data.frame(P20WIN_Data_Dictionary),"~/Data-Dictionaries/P20 WIN Data Dictionary/P20WIN_Data_Dictionary.xlsx", row.names = FALSE)
rsconnect::deployApp('~/Data-Dictionaries/P20 WIN Data Dictionary')
getwd()
#install.packages("readxl")
library(readxl)
library(xlsx)
#### Reading in the Data Dictionaries - add row for new agencies ####
CCEH <- read_excel("~/Data-Dictionaries/Data Dictionaries (Upload Here)/CCEH/CCEH_Data_Dictionary.xlsx")
getwd()
CCEH <- read_excel("~/Open Data/Data-Dictionaries/Data Dictionaries (Upload Here)/CCEH/CCEH_Data_Dictionary.xlsx")
CCEH <- read_excel("Data Dictionaries (Upload Here)/CCEH/CCEH_Data_Dictionary.xlsx")
#install.packages("readxl")
library(readxl)
library(xlsx)
#### Reading in the Data Dictionaries - add row for new agencies ####
CCEH <- read_excel("Data Dictionaries (Upload Here)/CCEH/CCEH_Data_Dictionary.xlsx")
CCIC <- read_excel("Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
CSCU <- read_excel("Data Dictionaries (Upload Here)/CSCU/CSCU_Data_Dictionary.xlsx")
DCF <- read_excel("Data Dictionaries (Upload Here)/DCF/DCF_Data_Dictionary.xlsx")
DHMAS <- read_excel("Data Dictionaries (Upload Here)/DMHAS/DMHAS_Data_Dictionary.xlsx")
DOL <- read_excel("Data Dictionaries (Upload Here)/DOL/DOL_Data_Dictionary.xlsx")
OEC <- read_excel("Data Dictionaries (Upload Here)/OEC/OEC_Data_Dictionary.xlsx")
OHE <- read_excel("Data Dictionaries (Upload Here)/OHE/OHE_Data_Dictionary.xlsx")
SDE <- read_excel("Data Dictionaries (Upload Here)/SDE/SDE_Data_Dictionary.xlsx")
library(readxl)
library(xlsx)
#### Reading in the Data Dictionaries - add row for new agencies ####
CCEH <- read_excel("Data Dictionaries (Upload Here)/CCEH/CCEH_Data_Dictionary.xlsx")
CCIC <- read_excel("Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
CSCU <- read_excel("Data Dictionaries (Upload Here)/CSCU/CSCU_Data_Dictionary.xlsx")
DCF <- read_excel("Data Dictionaries (Upload Here)/DCF/DCF_Data_Dictionary.xlsx")
DHMAS <- read_excel("Data Dictionaries (Upload Here)/DMHAS/DMHAS_Data_Dictionary.xlsx")
DOL <- read_excel("Data Dictionaries (Upload Here)/DOL/DOL_Data_Dictionary.xlsx")
OEC <- read_excel("Data Dictionaries (Upload Here)/OEC/OEC_Data_Dictionary.xlsx")
OHE <- read_excel("Data Dictionaries (Upload Here)/OHE/OHE_Data_Dictionary.xlsx")
SDE <- read_excel("Data Dictionaries (Upload Here)/SDE/SDE_Data_Dictionary.xlsx")
#### Reading in the Data Dictionaries - add row for new agencies ####
CCEH <- read_excel("Data Dictionaries (Upload Here)/CCEH/CCEH_Data_Dictionary.xlsx")
CCIC <- read_excel("Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
CSCU <- read_excel("Data Dictionaries (Upload Here)/CSCU/CSCU_Data_Dictionary.xlsx")
DCF <- read_excel("Data Dictionaries (Upload Here)/DCF/DCF_Data_Dictionary.xlsx")
DHMAS <- read_excel("Data Dictionaries (Upload Here)/DMHAS/DMHAS_Data_Dictionary.xlsx")
DOL <- read_excel("Data Dictionaries (Upload Here)/DOL/DOL_Data_Dictionary.xlsx")
OEC <- read_excel("Data Dictionaries (Upload Here)/OEC/OEC_Data_Dictionary.xlsx")
OHE <- read_excel("Data Dictionaries (Upload Here)/OHE/OHE_Data_Dictionary.xlsx")
SDE <- read_excel("Data Dictionaries (Upload Here)/SDE/SDE_Data_Dictionary.xlsx")
UConn <- read_excel("Data Dictionaries (Upload Here)/UConn/UConn_Data_Dictionary.xlsx")
#### Creating P20 WIN Data Dictionary ####
P20WIN_Data_Dictionary <- rbind(CCEH,CCIC,CSCU,DCF,DHMAS,DOL,OEC,OHE,SDE,UConn)
P20WIN_Data_Dictionary$`Click to View More` <- '&oplus;' #adding the column that will be used to expand the selection.
P20WIN_Data_Dictionary <- P20WIN_Data_Dictionary[,c(8,1:7)] #moving the added column to be the first column
P20WIN_Data_Dictionary[is.na(P20WIN_Data_Dictionary)] <- "Not Available"
write.xlsx(as.data.frame(P20WIN_Data_Dictionary),"P20 WIN Data Dictionary/P20WIN_Data_Dictionary.xlsx", row.names = FALSE)
shiny::runApp('P20 WIN Data Dictionary')
#install.packages("readxl")
library(readxl)
library(xlsx)
#### Reading in the Data Dictionaries - add row for new agencies ####
CCEH <- read_excel("Data Dictionaries (Upload Here)/CCEH/CCEH_Data_Dictionary.xlsx")
CCIC <- read_excel("Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
CSCU <- read_excel("Data Dictionaries (Upload Here)/CSCU/CSCU_Data_Dictionary.xlsx")
DCF <- read_excel("Data Dictionaries (Upload Here)/DCF/DCF_Data_Dictionary.xlsx")
DHMAS <- read_excel("Data Dictionaries (Upload Here)/DMHAS/DMHAS_Data_Dictionary.xlsx")
DOL <- read_excel("Data Dictionaries (Upload Here)/DOL/DOL_Data_Dictionary.xlsx")
OEC <- read_excel("Data Dictionaries (Upload Here)/OEC/OEC_Data_Dictionary.xlsx")
OHE <- read_excel("Data Dictionaries (Upload Here)/OHE/OHE_Data_Dictionary.xlsx")
SDE <- read_excel("Data Dictionaries (Upload Here)/SDE/SDE_Data_Dictionary.xlsx")
UConn <- read_excel("Data Dictionaries (Upload Here)/UConn/UConn_Data_Dictionary.xlsx")
CSSD <- read_excel("Data Dictionaries (Upload Here)/CSSD/CSSD_Data_Dictionary.xlsx")
#### Creating P20 WIN Data Dictionary ####
P20WIN_Data_Dictionary <- rbind(CCEH,CCIC,CSCU,CSSD,DCF,DHMAS,DOL,OEC,OHE,SDE,UConn)
P20WIN_Data_Dictionary$`Click to View More` <- '&oplus;' #adding the column that will be used to expand the selection.
P20WIN_Data_Dictionary <- P20WIN_Data_Dictionary[,c(8,1:7)] #moving the added column to be the first column
P20WIN_Data_Dictionary[is.na(P20WIN_Data_Dictionary)] <- "Not Available"
#### Saving P20 WIN Data Dictionary ####
write.xlsx(as.data.frame(P20WIN_Data_Dictionary),"P20 WIN Data Dictionary/P20WIN_Data_Dictionary.xlsx", row.names = FALSE)
#install.packages("readxl")
library(readxl)
library(xlsx)
#### Reading in the Data Dictionaries - add row for new agencies ####
CCEH <- read_excel("Data Dictionaries (Upload Here)/CCEH/CCEH_Data_Dictionary.xlsx")
CCIC <- read_excel("Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
CSCU <- read_excel("Data Dictionaries (Upload Here)/CSCU/CSCU_Data_Dictionary.xlsx")
DCF <- read_excel("Data Dictionaries (Upload Here)/DCF/DCF_Data_Dictionary.xlsx")
DHMAS <- read_excel("Data Dictionaries (Upload Here)/DMHAS/DMHAS_Data_Dictionary.xlsx")
DOL <- read_excel("Data Dictionaries (Upload Here)/DOL/DOL_Data_Dictionary.xlsx")
OEC <- read_excel("Data Dictionaries (Upload Here)/OEC/OEC_Data_Dictionary.xlsx")
OHE <- read_excel("Data Dictionaries (Upload Here)/OHE/OHE_Data_Dictionary.xlsx")
SDE <- read_excel("Data Dictionaries (Upload Here)/SDE/SDE_Data_Dictionary.xlsx")
UConn <- read_excel("Data Dictionaries (Upload Here)/UConn/UConn_Data_Dictionary.xlsx")
CSSD <- read_excel("Data Dictionaries (Upload Here)/CSSD/CSSD_Data_Dictionary.xlsx")
#### Creating P20 WIN Data Dictionary ####
P20WIN_Data_Dictionary <- rbind(CCEH,CCIC,CSCU,DCF,DHMAS,DOL,CSSD, OEC,OHE,SDE,UConn)
P20WIN_Data_Dictionary$`Click to View More` <- '&oplus;' #adding the column that will be used to expand the selection.
P20WIN_Data_Dictionary <- P20WIN_Data_Dictionary[,c(8,1:7)] #moving the added column to be the first column
P20WIN_Data_Dictionary[is.na(P20WIN_Data_Dictionary)] <- "Not Available"
#### Saving P20 WIN Data Dictionary ####
write.xlsx(as.data.frame(P20WIN_Data_Dictionary),"P20 WIN Data Dictionary/P20WIN_Data_Dictionary.xlsx", row.names = FALSE)
#install.packages("readxl")
library(readxl)
library(xlsx)
#### Reading in the Data Dictionaries - add row for new agencies ####
CCEH <- read_excel("Data Dictionaries (Upload Here)/CCEH/CCEH_Data_Dictionary.xlsx")
CCIC <- read_excel("Data Dictionaries (Upload Here)/CCIC/CCIC_Data_Dictionary.xlsx")
CSCU <- read_excel("Data Dictionaries (Upload Here)/CSCU/CSCU_Data_Dictionary.xlsx")
DCF <- read_excel("Data Dictionaries (Upload Here)/DCF/DCF_Data_Dictionary.xlsx")
DHMAS <- read_excel("Data Dictionaries (Upload Here)/DMHAS/DMHAS_Data_Dictionary.xlsx")
DOL <- read_excel("Data Dictionaries (Upload Here)/DOL/DOL_Data_Dictionary.xlsx")
OEC <- read_excel("Data Dictionaries (Upload Here)/OEC/OEC_Data_Dictionary.xlsx")
OHE <- read_excel("Data Dictionaries (Upload Here)/OHE/OHE_Data_Dictionary.xlsx")
SDE <- read_excel("Data Dictionaries (Upload Here)/SDE/SDE_Data_Dictionary.xlsx")
UConn <- read_excel("Data Dictionaries (Upload Here)/UConn/UConn_Data_Dictionary.xlsx")
CSSD <- read_excel("Data Dictionaries (Upload Here)/CSSD/CSSD_Data_Dictionary.xlsx")
#### Creating P20 WIN Data Dictionary ####
P20WIN_Data_Dictionary <- rbind(CCEH,CCIC,CSCU,DCF,DHMAS,DOL,CSSD, OEC,OHE,SDE,UConn)
P20WIN_Data_Dictionary$`Click to View More` <- '&oplus;' #adding the column that will be used to expand the selection.
P20WIN_Data_Dictionary <- P20WIN_Data_Dictionary[,c(8,1:7)] #moving the added column to be the first column
P20WIN_Data_Dictionary[is.na(P20WIN_Data_Dictionary)] <- "Not Available"
#### Saving P20 WIN Data Dictionary ####
write.xlsx(as.data.frame(P20WIN_Data_Dictionary),"P20 WIN Data Dictionary/P20WIN_Data_Dictionary.xlsx", row.names = FALSE)
shiny::runApp('P20 WIN Data Dictionary')
runApp('P20 WIN Data Dictionary')
runApp('P20 WIN Data Dictionary')
runApp('P20 WIN Data Dictionary')
runApp('P20 WIN Data Dictionary')
runApp('P20 WIN Data Dictionary')
runApp('P20 WIN Data Dictionary')
